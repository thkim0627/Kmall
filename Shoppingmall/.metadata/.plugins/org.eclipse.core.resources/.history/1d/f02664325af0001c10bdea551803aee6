<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Kmall / 회원가입</title>
<!-- 0-1.favicon -->
<link rel="shortcut icon" type="image/x-icon" href="resources/favicon/favicon.ico"/>
<!-- 0-2.css -->
<link rel="stylesheet" type="text/css" href="resources/css/home.css">
<link rel="stylesheet" type="text/css" href="resources/css/join.css">
<!-- 0-3.jqeury -->
<script src="resources/myLib/jquery-3.2.1.min.js"></script>
</head>
<body>
	<!--  enctype="multipart/form-data"
	파일 upload를 가능하게 해줌 
	multipart/form-data는 파일업로드가 있는 입력양식요소에 사용되는 enctype 속성의 값중 하나이고, 
	multipart는 폼데이터가 여러 부분으로 나뉘어 서버로 전송되는 것을 의미, 이 폼이 제출될 때 이 형식을 서버에 알려주며, 
	multipart/form-data로 지정이 되어 있어야 서버에서 정상적으로 데이터를 처리할 수 있다. -->
   
	<form action="join" method="post" id="myform" enctype="multipart/form-data">
		<table>
			<tr>
	 			<td><input type="text" name="id" id="id" placeholder="ID">
			</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=password>Password</label></td>
		<td><input type="password" name=password id=password size="20"><br>
	 		<span id="pMessage" class="eMessage"></span></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=name>Name</label></td>
		<td><input type="text" name=name id=name size="20"><br>
	 		<span id="nMessage" class="eMessage"></span></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=lev>Level</label></td>
		<td><select name=lev id=lev>
				<option value="A">관리자</option>
				<option value="B">나무</option>
				<option value="C">잎새</option>
				<option value="D" selected >새싹</option>
			</select></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=birthd>Birthday</label></td>
		<td><input type="date" name=birthd id=birthd><br>
	 		<span id="bMessage" class="eMessage"></span></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=point>Point</label></td>
		<td><input type="text" name=point id=point size="20"><br>
	 		<span id="poMessage" class="eMessage"></span></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=weight>Weight</label></td>
		<td><input type="text" name=weight id=weight size="20"><br>
	 		<span id="wMessage" class="eMessage"></span></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=rid>추천인 ID</label></td>
		<td><input type="text" name=rid id=rid size="20"></td>
	</tr>
	<tr height=40>
		<td bgcolor="AliceBlue"><label for=uploadfilef>Image</label></td>
		<td><img src="" class="select_img"><br>
			<input type="file" name=uploadfilef id=uploadfilef>
		<script>
		// 해당 파일의 서버상의 경로를 src로 지정하는것으로는 클라이언트 영역에서 이미지는 표시될수 없기 때문에
		// 이를 해결하기 위해 FileReader이라는 Web API를 사용
		// => 이 를 통해 url data를 얻을 수 있음.
		//    ( https://developer.mozilla.org/ko/docs/Web/API/FileReader)
		// ** FileReader
		// => 웹 애플리케이션이 비동기적으로 데이터를 읽기 위하여 읽을 파일을 가리키는File
		//    혹은 Blob 객체를 이용해 파일의 내용을(혹은 raw data버퍼로) 읽고 
		//    사용자의 컴퓨터에 저장하는 것을 가능하게 해줌.	
		// => FileReader.onload 이벤트의 핸들러.
		//    읽기 동작이 성공적으로 완료 되었을 때마다 발생.
		// => e.target : 이벤트를 유발시킨 DOM 객체
		// => type="file" 은 복수개의 파일을 업로드 할 수 있도록 설계됨
		//    그러므로 files[] 배열 형태의 속성을 가짐
		
			$('#uploadfilef').change(function(){
				if(this.files && this.files[0]) {
					var reader = new FileReader;
			 			reader.onload = function(e) {
		 					$(".select_img").attr("src", e.target.result)
		 									.width(100).height(100); 
		 				} // onload_function
		 				reader.readAsDataURL(this.files[0]);
		 		} // if
			}); // change
		</script>
	</td>
</tr>

<tr><td></td>	
	<td><br>
	<input type="submit" value=가입 id="submit" >&nbsp;&nbsp;
	<input type="reset" value="취소">&nbsp;&nbsp;
	<span id="axjoin" class="textlink">axJoin</span>
	</td>
</tr>	
</table>
</form>
<br>
<c:if test="${not empty message}">
	=> ${message} <br>
</c:if>
<hr>
<a href="home">HOME</a>
</body>
</html>