/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2022-06-20 12:33:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Development/Project/Shoppingmall/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/Kmall/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1650246330080L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>** Spring Mybatis JoinForm **</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/myLib/myStyle.css\" >\r\n");
      out.write("<script src=\"resources/myLib/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script src=\"resources/myLib/inCheck.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//1) 전역변수 선언\r\n");
      out.write("//=> 개별적 오류 확인을 위한 switch 변수\r\n");
      out.write("\tvar iCheck=false;\r\n");
      out.write("\tvar pCheck=false;\r\n");
      out.write("\tvar nCheck=false;\r\n");
      out.write("\tvar bCheck=false;\r\n");
      out.write("\tvar poCheck=false;\r\n");
      out.write("\tvar wCheck=false;\r\n");
      out.write("\r\n");
      out.write("// 2) 개별적 focusout 이벤트 핸들러 작성 : JQuery\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('#id').focus();\r\n");
      out.write("\t// ** ID\r\n");
      out.write("\t$('#id').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t// => form 에 submit 이 있는경우\r\n");
      out.write("\t\t\t// => enter 누르면 자동 submit 발생되므로 이를 제거함\r\n");
      out.write("\t\t\t$('#password').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\tiCheck=idCheck();\r\n");
      out.write("\t}); //id\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Password\r\n");
      out.write("\t$('#password').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#name').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\tpCheck=pwCheck();\r\n");
      out.write("\t}); //password\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Name\r\n");
      out.write("\t$('#name').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#lev').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\tnCheck=nameCheck();\r\n");
      out.write("\t}); //name\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Lev : enterkey -> Next 이동\r\n");
      out.write("\t$('#lev').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#birthd').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}); //lev\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Birthday\r\n");
      out.write("\t$('#birthd').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#point').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\tbCheck=biCheck();\r\n");
      out.write("\t}); //birthd\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Point\r\n");
      out.write("\t$('#point').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#weight').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\tpoCheck=pointCheck();\r\n");
      out.write("\t}); //password\r\n");
      out.write("\t\r\n");
      out.write("\t// ** Weight\r\n");
      out.write("\t$('#weight').keydown(function(e){\r\n");
      out.write("\t\tif (e.which==13) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$('#submit').focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).focusout(function(){\r\n");
      out.write("\t\twCheck=weCheck();\r\n");
      out.write("\t}); //weight\r\n");
      out.write("\t\r\n");
      out.write("}); //ready\r\n");
      out.write("\r\n");
      out.write("// 3) submit 판단 & 실행 :  JS submit\r\n");
      out.write("function inCheck() {\r\n");
      out.write("\tif ( iCheck==false ) { $('#iMessage').html(' id 를 확인 하세요 !! '); }\r\n");
      out.write("\tif ( pCheck==false ) { $('#pMessage').html(' password 를 확인 하세요 !! '); }\r\n");
      out.write("\tif ( nCheck==false ) { $('#nMessage').html(' name 을 확인 하세요 !! '); }\r\n");
      out.write("\tif ( bCheck==false ) { $('#bMessage').html(' birthday 를 확인 하세요 !! '); }\r\n");
      out.write("\tif ( poCheck==false ) { $('#poMessage').html(' point 를 확인 하세요 !! '); }\r\n");
      out.write("\tif ( wCheck==false ) { $('#wMessage').html(' weight 를 확인 하세요 !! '); }\r\n");
      out.write("\t\r\n");
      out.write("\tif ( iCheck && pCheck && nCheck &&\r\n");
      out.write("\t\t bCheck && poCheck && wCheck ) {\r\n");
      out.write("\t\tif ( confirm(\"~~ 정말 가입 하십니까 ? (Yes:확인 / No:취소)\")==false ) {\r\n");
      out.write("\t\t\t  alert('~~ 가입이 취소 되었습니다 ~~');\r\n");
      out.write("\t\t\t  return false; \r\n");
      out.write("\t\t}else return true; // submit 진행 -> 404\r\n");
      out.write("\t} else return false;\r\n");
      out.write("} //inCheck()\r\n");
      out.write("\r\n");
      out.write("// *** ID 중복확인\r\n");
      out.write("// => id 옆에 button 추가 (button type='button')\r\n");
      out.write("// => submit : 초기화면 disabled , id 확정후 enabled ( 동시에 idDup 버튼은 disabled )  \r\n");
      out.write("// => id 무결성 확인 후 서버로 확인요청 -> 결과는 새창으로 처리\r\n");
      out.write("function idDupCheck() {\r\n");
      out.write("\t// id 무결성 확인\r\n");
      out.write("\tif (iCheck==false) iCheck=idCheck();\r\n");
      out.write("\telse {\r\n");
      out.write("\t\t// 서버로 확인요청 -> 결과는 새창으로 처리\r\n");
      out.write("\t\tvar url='idDupCheck?id='+$('#id').val();  // idDupCheck?id=newid \r\n");
      out.write("\t\twindow.open(url,'_blank',\r\n");
      out.write("\t\t\t\t'toolbar=no, menubar=yes, scrollbars=yes, resizable=yes, width=400, height=300');\r\n");
      out.write("\t}\r\n");
      out.write("}; //idDupCheck\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- enctype=\"multipart/form-data\"는 파일 업로드를 가능하게 해줌 \r\n");
      out.write("\tmultipart/form-data는 파일업로드가 있는 입력양식요소에 사용되는 enctype 속성의 값중 하나이고, \r\n");
      out.write("\tmultipart는 폼데이터가 여러 부분으로 나뉘어 서버로 전송되는 것을 의미한다. \r\n");
      out.write("\t폼이 제출될 때 이 형식을 서버에 알려주며, multipart/form-data로 지정이 되어 있어야 서버에서 정상적으로 데이터를 처리할 수 있다. -->\r\n");
      out.write("\t   \r\n");
      out.write("\t<form action=\"join\" method=\"post\" id=\"myform\" enctype=\"multipart/form-data\" >\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<!-- 1.아이디 입력란 구현 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t \t\t<td>\r\n");
      out.write("\t\t \t\t\t<input type=\"text\" name=\"id\" id=\"id\" placeholder=\"ID\">\r\n");
      out.write("\t\t \t\t\t<button type=\"button\" id=\"idDup\" onclick=\"idDupCheck()\">중복확인</button><br>\r\n");
      out.write("\t\t \t\t\t<span id=\"iMessage\" class=\"eMessage\"></span>\r\n");
      out.write("\t\t \t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<!-- 2.비밀번호 입력란 구현 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\" placeholder=\"PASSWORD\"><br>\r\n");
      out.write("\t\t \t\t\t<span id=\"pMessage\" class=\"eMessage\"></span>\r\n");
      out.write("\t\t \t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<!-- 3.이름 입력란 구현 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" placeholder=\"NAME\"><br>\r\n");
      out.write("\t\t \t\t\t<span id=\"nMessage\" class=\"eMessage\"></span>\r\n");
      out.write("\t\t \t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=lev>Level</label></td>\r\n");
      out.write("\t\t\t<td><select name=lev id=lev>\r\n");
      out.write("\t\t\t\t\t<option value=\"A\">관리자</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"B\">나무</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"C\">잎새</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"D\" selected >새싹</option>\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=birthd>Birthday</label></td>\r\n");
      out.write("\t\t\t<td><input type=\"date\" name=birthd id=birthd><br>\r\n");
      out.write("\t\t \t\t<span id=\"bMessage\" class=\"eMessage\"></span></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=point>Point</label></td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=point id=point size=\"20\"><br>\r\n");
      out.write("\t\t \t\t<span id=\"poMessage\" class=\"eMessage\"></span></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=weight>Weight</label></td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=weight id=weight size=\"20\"><br>\r\n");
      out.write("\t\t \t\t<span id=\"wMessage\" class=\"eMessage\"></span></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=rid>추천인 ID</label></td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=rid id=rid size=\"20\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=40>\r\n");
      out.write("\t\t\t<td bgcolor=\"AliceBlue\"><label for=uploadfilef>Image</label></td>\r\n");
      out.write("\t\t\t<td><img src=\"\" class=\"select_img\"><br>\r\n");
      out.write("\t\t\t\t<input type=\"file\" name=uploadfilef id=uploadfilef>\r\n");
      out.write("\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t// 해당 파일의 서버상의 경로를 src로 지정하는것으로는 클라이언트 영역에서 이미지는 표시될수 없기 때문에\r\n");
      out.write("\t\t\t\t// 이를 해결하기 위해 FileReader이라는 Web API를 사용\r\n");
      out.write("\t\t\t\t// => 이 를 통해 url data를 얻을 수 있음.\r\n");
      out.write("\t\t\t\t//    ( https://developer.mozilla.org/ko/docs/Web/API/FileReader)\r\n");
      out.write("\t\t\t\t// ** FileReader\r\n");
      out.write("\t\t\t\t// => 웹 애플리케이션이 비동기적으로 데이터를 읽기 위하여 읽을 파일을 가리키는File\r\n");
      out.write("\t\t\t\t//    혹은 Blob 객체를 이용해 파일의 내용을(혹은 raw data버퍼로) 읽고 \r\n");
      out.write("\t\t\t\t//    사용자의 컴퓨터에 저장하는 것을 가능하게 해줌.\t\r\n");
      out.write("\t\t\t\t// => FileReader.onload 이벤트의 핸들러.\r\n");
      out.write("\t\t\t\t//    읽기 동작이 성공적으로 완료 되었을 때마다 발생.\r\n");
      out.write("\t\t\t\t// => e.target : 이벤트를 유발시킨 DOM 객체\r\n");
      out.write("\t\t\t\t// => type=\"file\" 은 복수개의 파일을 업로드 할 수 있도록 설계됨\r\n");
      out.write("\t\t\t\t//    그러므로 files[] 배열 형태의 속성을 가짐\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$('#uploadfilef').change(function(){\r\n");
      out.write("\t\t\t\t\t\tif(this.files && this.files[0]) {\r\n");
      out.write("\t\t\t\t\t\t\tvar reader = new FileReader;\r\n");
      out.write("\t\t\t\t\t \t\t\treader.onload = function(e) {\r\n");
      out.write("\t\t\t\t \t\t\t\t\t$(\".select_img\").attr(\"src\", e.target.result)\r\n");
      out.write("\t\t\t\t \t\t\t\t\t\t\t\t\t.width(100).height(100); \r\n");
      out.write("\t\t\t\t \t\t\t\t} // onload_function\r\n");
      out.write("\t\t\t\t \t\t\t\treader.readAsDataURL(this.files[0]);\r\n");
      out.write("\t\t\t\t \t\t} // if\r\n");
      out.write("\t\t\t\t\t}); // change\r\n");
      out.write("\t\t\t\t</script>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr><td></td>\t\r\n");
      out.write("\t\t\t<td><br>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=가입 id=\"submit\" onclick=\"return inCheck()\" disabled >&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<input type=\"reset\" value=\"취소\">&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<span id=\"axjoin\" class=\"textlink\">axJoin</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
